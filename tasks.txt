Tasks
1. create Web access only to public folder
    1. for apache create .htaccess file
    2. for nginx configuration
    3. i will skip for now, as will use inner php server
2. Create init boot file, with enviroment variables
    1. Develop and Prod modes
    2. const of ROOT, PUBLIC, APP, FRAMEWORK, LIBS, CACHE, CONFIG, LAYOUT, ADMIN
    3. const for domain name: http or https
    4. require autoload
3. Register class
    1. Create singlton Registry class 
    2. Create trait to avoid dubliating if singleton pattern
    3. create env.php with configuration array
    4. fill registry with them
4. Error handler class
    1. check App mode: developer or production
    2. use const Debug,
    3. set_exception_handler
    4. Error logger and display error methods
    5. create templates for 404, 500 errors
5. Router
    1. Write my own implementation of Router MVC 
6. Controller, View
    1. Create base controller
    2. Create base View
7. Refactor
    1. Remove query string "?foo=bar"
    2. Composer Redbean
    3. Create config for connecting to db
    4. create DB for project
    5. create DB class for connecting to ReadBean
8. Find and import html template to project
9. create tables for Shop (user video as reference)
    1. user table;
    2. render Brands on main page (if needed to create content in db);

10. Popular products
    1. watch
    2. get hists from products table.
    3. render them on main page
11. Widget Currencies <-- !DONE
    1. Create Currency class
    2. create template for it
    3. render static data tp header
    4. CurrencyController to handle currency changes
    5. check Get parameter and set cookie in it
    6. create main.js file for custom scripts on site
    7. create redirect methods
12. Class Menu as Widget <-- !DONE
    1. get categories +
    2. cache categories +
    3. create tree from categories +
    4. create html for categories +
13. Product Page <- DONE!
    1. Template for Product +
    2. Routes for products +
    3. Product Controller +
    4. Product View +
    5. Product Model +
    6. Breadcrumbs +
    7. Related products +
    8. Cookie requested product +
    9. Cookie watched products +
    10. Gallery +
    11. Swatches  -
    12. set MEta -
    13. make 404 -
    14. Tabs accordion +
14. Product Cart <- DONE!
    1. Cart Add Controller +
    2. JS handler +
    3. Handle modifications +
    4. Cart Model +
15. Search <- DONE!
16. Category Page <- DONE!
    1. Categories tree by id
    2. render products in parents IDS
    3. @! Breadcrumbs (use exsit class)
17. Pagination <- DONE!
    1. get Config for pagination
18. Registration <- DONE!
    1. Registration dropdown +
    2. User Controller +
    3. Validation Class +
    4. Bootstrap Validator, Valitron +
19. Place Order <- DONE!
    1. Page of cart +
    2. form of not login user +
    3. Implement EMAIL notification (LATER);
20. Filters <- DONE!
    1. Class for retrieving and caching filters
    2. render in widgets
    3. make JS handler for filters
21. AdminLte <- DONE!
22. Login Admin <- DONE!
23. Dashboard <- DONE!
    1. statistics
24. Order List Page <- DONE!
25. Order Page <- DONE!
    1. Delete, apply actions
26. Categories <- DONE!
    1. make menu +
    2. render categories tree +
    3. handle remove categories +
    4. add categories +
    5. edit category -
    6. cyrillic to translit and generate url +
27. Cache Control
    1. System settings, cache page +
    2. handle clear cache +
28. Users <- DONE!
    1. users list +
    2. user edit +
    3. user page +
    4. Add user +
29. Products Admin <- DONE!
    1. Product List +
    2. Create Product Form +
    3. Connect Summerlite to text area content +
    4. KcFinder -
    5. File manager image loader +
    6. tabs for attributes product +
30. Related Product <- DONE!
    1. Select 2 +
    2. handle save related products +
31. Images <- DONE!
    1. Setting for images width-height +
    2. Form html for sending base image and gallery +
    3. Script for uploading images +
    4. Class for proccessing images +
32. CRUD for attributes
    1. CRUD for groups
    2. CRUD for attributes
    3.






